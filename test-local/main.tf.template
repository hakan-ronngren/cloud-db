# Create a copy without the .template suffix and adapt it to your needs.
# You need a bucket where Terraform can store its state.
# Unless you have one already, you can create one here:
# https://console.cloud.google.com/storage

terraform {
  backend "gcs" {
    bucket = "my-globally-unique-bucket-name"
    prefix = "my-project/db-vm"
  }
}

variable "project" {
  type    = string
  default = "my-project-11111"
}

variable "region" {
  type    = string
  default = "europe-west1"
}

variable "zone" {
  type    = string
  default = "europe-west1-b"
}

variable "extra_instance" {
  type        = number
  description = "Set to 1 to get a separate instance for connectivity testing"
  default     = 0
}

# In real life, you would fetch the passwords from GCP secrets.
# You would still want them to be hashed, because Terraform is going
# to store them in the state blob.
# You can use the hash-password python script in the root of this
# repository to produce a PostgreSQL-compatible hash string.
module "db_vm" {
  source  = "<FILL_IN_THE_PATH_OF_YOUR_CLONE_OF_THIS_REPOSITORY>"
  project = var.project
  region  = var.region
  zone    = var.zone

  dev_mode = true

  enable_pgadmin = true

  databases = [
    {
      name = "foo",
      user = "foo",
      # Fo0
      md5_password = "md58aa7e7121f6d0c4264a0795b4fff003e"
    }
  ]

  uptime_schedule = {
    start     = "0 6 * * *"
    stop      = "0 0 * * *"
    time_zone = "Europe/Stockholm"
  }
}
